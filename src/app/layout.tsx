import 'material-symbols';
import '#@/styles/css/globals.css';

import { NavProvider } from '#@/app/navigator-context';
import { SearchProvider } from '#@/app/search-context';
import {
  Poiret_One,
  Roboto_Mono,
  Josefin_Sans,
  Roboto,
} from 'next/font/google';
import type { Metadata } from 'next';
import { ReactNode, Suspense } from 'react';
import { NoteProvider } from './notes-context';
import { ModalProvider } from './modal-context';
import layout from '#@/styles/css/layout.module.css';

export const metadata: Metadata = {
  metadataBase: new URL('http://localhost:3000'),
  title: 'R&S Asesoría Jurídica',
  description: 'Generated by create next app',
  generator: 'R&S Asesoría Jurídica',
  applicationName: 'R&S Asesoría Jurídica',
  referrer: 'origin-when-cross-origin',
  keywords: ['Next.js', 'React', 'JavaScript'],
  authors: [
    {
      name: 'cam',
    },
    {
      name: 'Cachorro Cami',
      url: 'http://localhost:3000',
    },
  ],
  colorScheme: 'light dark',
  themeColor: [
    {
      media: '(prefers-color-scheme: light)',
      color: '#a700b0',
    },
    {
      media: '(prefers-color-scheme: dark)',
      color: '#ff4e3f',
    },
  ],
  creator: 'Cachorro Cami',
  manifest: 'http://localhost:3000/manifest.json',
  publisher: 'CachorroC',
  alternates: {},
  formatDetection: {
    email: false,
    address: false,
    telephone: false,
  },
  openGraph: {
    title: 'R&S Asesoría Jurídica',
    description: 'The React Framework for the Web',
    url: 'http://localhost:3000',
    siteName: 'Next.js',
    images: [
      {
        url: 'http://localhost:3000/splash_screens/12.9__iPad_Pro_portrait.png',
        width: 800,
        height: 600,
      },
      {
        url: 'http://localhost:3000 / splash_screens /8.3__iPad_Mini_landscape.png',
        width: 1800,
        height: 1600,
        alt: 'My custom alt',
      },
    ],
    locale: 'es-CO',
    type: 'website',
  },
  icons: {
    icon: [
      {
        url: '/icons/favicon.png',
      },
      new URL('/favicon.svg', 'http://localhost:3000'),
    ],
    shortcut: '/safari-pinned-tab.svg',
    apple: '/icons/apple-touch-icon.png',
    other: {
      rel: 'apple-touch-icon-precomposed',
      url: '/icons/apple-touch-icon-precomposed.png',
    },
  },
  appleWebApp: {
    title: 'Apple Web App',
    statusBarStyle: 'black-translucent',
    startupImage: [
      '/icons/mstile-310x310.png',
      {
        url: '/icons/android-chrome-512x512.png',
        media: '(device-width: 768px) and (device-height: 1024px)',
      },
    ],
  },
  appLinks: {
    web: {
      url: 'http://localhost:3000',
      should_fallback: true,
    },
  },
};

const roboto_mono = Roboto({
  subsets: ['latin'],
  variable: '--roboto',
  display: 'swap',
  weight: ['100', '400', '700'],
});

const josefina = Josefin_Sans({
  subsets: ['latin'],
  variable: '--josefa',
  display: 'fallback',
});

const poiret = Poiret_One({
  weight: '400',
  variable: '--font-poiret',
  subsets: ['latin', 'latin-ext'],
  display: 'swap',
});

export default function RootLayout(props: {
  header: ReactNode;
  children: ReactNode;
  modal: ReactNode;
}) {
  return (
    <html
      lang='es'
      className={`${poiret.variable} ${roboto_mono.variable}[ color - scheme: light dark ]`}
    >
      <body>
        <SearchProvider>
          <NavProvider>
            <ModalProvider>
              <NoteProvider>
                <div className={layout.container}>
                  {props.header}
                  {props.children}
                  {props.modal}
                </div>
              </NoteProvider>
            </ModalProvider>
          </NavProvider>
        </SearchProvider>
      </body>
    </html>
  );
}
